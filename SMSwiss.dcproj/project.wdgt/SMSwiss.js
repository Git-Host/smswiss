/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */
 
 var addressBoockEngine = new addressBoock();
var settingsEngine = new SettingsEngine();
        
function globalSearchKeyPressed(event){
            addressBoockEngine.searchKeyPressed(event);
}
function globalSearchContacts(event){
            addressBoockEngine.searchContacts(event);
}
function globalSetRunningAccount(event){
            settingsEngine.setRunningAccount(event);
}
 
 
var SMSEngineStatus = {
                registeringUser : "Loging...",
                sendingSMS: "Sending SMS...",
                loadingAccountStatus: "Loading account..."
};

var SMSEngineFeedBack = {
                connectionError : "Connection error!",
                authenticationError: "Authentication error!",
                cookieError: "Cookie erro!r",
                smsCountError :"SMS count error!",
                smsSendingError: "SMS sending error!",
                smsSent: "SMS successful sent!",
                authenticationSuccessful: "User successful authenticated!"
};

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    settingsEngine.loadSettings();
    settingsEngine.loadAccountData(0); //Load the first account data into the account setting page by default
    dashcode.setupParts();
}


//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    // Restart any timers that were stopped on hide
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    
    settingEngine.sync();
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}



//TODO: complete status feed back
function engineStatusFeedBack(event){
    alert(event);
    statusDesc.innerHTML = event;
    statusIcon.src = "images/loading.gif"
    statusIcon.style.visibility="visible";
}
//TODO: complete feed back
function engineFeedBack(event){
    alert(event);
    
    statusIcon.style.visibility="hidden";
    
    if(event == SMSEngineFeedBack.smsSent){
        statusIcon.src = "images/sent.png"
        statusIcon.style.visibility="visible";
        statusDesc.innerHTML = event;
        return;
    }
    if(event == SMSEngineFeedBack.authenticationSuccessful){
        statusDesc.innerHTML = "SMS left: " + settingsEngine.getSMSEngine().getSMSCount();
        return;
    }
        
        
    statusIcon.src = "images/error.png"
    statusIcon.style.visibility="visible";
    statusDesc.innerHTML = event;
}

function sendNewSMS()
{
        if (settingsEngine.getSMSEngine() != null
            && settingsEngine.getSMSEngine().isConnected() 
            && settingsEngine.getSMSEngine().hasEnoughCredits(messageField.value.length)
            && receiverNumberField.value != "") {            
                 
                var phoneNumber =receiverNumberField.value.split(" (")[0];
                var numCheckregex = new RegExp('^[+]?[0-9./ ]+');

                if(numCheckregex.exec(phoneNumber) == null){ //The number is not valid
                      //TODO: allert that the number is not valid
                      return;
                }       
                settingsEngine.getSMSEngine().Send(messageField.value,phoneNumber);
        }else{
            alert("The sms engine is not in state to send sms");
        }
}


function focusMessage(){
    messageField.focus();
}



//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    //settingsEngine.loadSettings(); reloading settings is probably non needed when showing the back of the widget
    
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    settingsEngine.saveSettings();
    settingsEngine.loadSettings(); //After saving reload all settings
    
    //GET sms count
    //if(settingsEngine.getSMSEngine() != null){
    //    settingsEngine.getSMSEngine().getAvailSMS();
    //}
    
    
    
    
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}






function showSettingPage(event)
{
    accountPage.style.visibility='hidden';
    settingPage.style.visibility='hidden';
    aboutPage.style.visibility='hidden';

    
    if(event.srcElement.value == "Accounts"){
        accountPage.style.visibility='visible';
    }
    if(event.srcElement.value == "Settings"){
        settingPage.style.visibility='visible';
    }
    if(event.srcElement.value == "About"){
        aboutPage.style.visibility='visible';
    }


}
